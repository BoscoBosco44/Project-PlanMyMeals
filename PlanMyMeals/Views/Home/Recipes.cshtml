@model RecipeViewModel


<div class="body-Recipe">
    <h1 class="AddRecipeText">Add Recipe</h1>
    <div class="AddRecipeLine"></div>

    <form asp-action="" asp-constoller="Home" method="post" class="flex">

        <div class="left-main3">

            <div class="NameAndInstructionsBox">
                <div class="InfoBoxSpacing">
                    <label class="paddingR-1" asp-for="thisMeal.Name">Name</label>
                    <input asp-for="thisMeal.Name">
                    <span asp-validaton-for="thisMeal.Name"></span>
                </div>
                <div class="InfoBoxSpacing">
                    <label class="paddingR-1" asp-for="thisMeal.Instructions">Instructions</label>
                    <input class="InstructionsInputBox" asp-for="thisMeal.Instructions">
                    <span asp-validaton-for="thisMeal.Instructions"></span>
                </div>

        </div>

            </div>

        <div class="center-main3">
            <h3>Recipe's Ingredients</h3>

            <ul>
                @foreach(MealIngredient mIng in Model.mealsIngredients) {
                <li>@mIng.Id</li>
                }


            </ul>
        </div>

        <div class="right-main3">
            <h3>Ingredient search:</h3>
            <input type="text" oninput="" placeholder="Search..."/>

            <ul id="ingredientListDisplay">

            </ul>


            <ul>
                @foreach(Ingredient ing in Model.allIngredients) {
                <li class="btn-primary" onclick="">@ing.Name</li>

                }
                @*//1. create form and search box
                    2. when typing in search box,
                        populate form w search through ingList and display matching ings in a list as buttons
                    3. when a ing button is clicked,
                        run a crud route to create a MealIngredient and display them
                *@

            </ul>
        </div>

    </form>


</div>